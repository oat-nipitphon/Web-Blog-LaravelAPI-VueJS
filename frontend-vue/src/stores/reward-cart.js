import { defineStore } from "pinia";
import { ref, computed } from "vue";

export const useRewardCartStore = defineStore("rewardCart", () => {
  const items = ref([]); // üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤ cart
  const addToCart = (reward) => {
    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ stock ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏´‡∏°
    if (reward.amount <= 0) {
      console.warn(`Reward "${reward.name}" is out of stock.`);
      return false; // ‚ùå ‡∏´‡∏¢‡∏∏‡∏î‡∏ñ‡πâ‡∏≤ stock ‡∏´‡∏°‡∏î
    }

    const existingItem = items.value.find((item) => item.id === reward.id);

    if (existingItem) {
      existingItem.amount += 1; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏ô cart
    } else {
      items.value.push({
        ...reward,
        amount: 1,
      });
    }

    return true; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
  };

  // ‚úÖ ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å cart (1 ‡∏ä‡∏¥‡πâ‡∏ô)
  const removeOneFromCart = (reward) => {
    const existingItem = items.value.find((item) => item.id === reward.id);
    if (existingItem) {
      if (existingItem.amount > 1) {
        existingItem.amount -= 1;
      } else {
        items.value = items.value.filter((item) => item.id !== reward.id);
      }
    }
  };

  // ‚úÖ ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡πâ‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å cart
  const removeAllFromCart = (reward) => {
    items.value = items.value.filter((item) => item.id !== reward.id);
  };

  // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const resetCart = () => {
    console.log("store resetCart: clear all cart items");
    items.value = [];
  };

  // ‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏ó‡∏∏‡∏Å amount)
  const countItems = computed(() => {
    return items.value.reduce((total, item) => total + item.amount, 0);
  });

  // ‚úÖ ‡∏£‡∏ß‡∏°‡πÅ‡∏ï‡πâ‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô cart
  const sumTotalPoint = computed(() => {
    return items.value.reduce(
      (total, item) => total + item.point * item.amount,
      0
    );
  });

  // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á cart ‡πÄ‡∏õ‡πá‡∏ô payload ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á API
  const cartItems = computed(() =>
    items.value.map((item) => ({
      rewardID: item.id,
      rewardName: item.name,
      rewardPoint: item.point,
      rewardAmount: item.amount,
    }))
  );

  return {
    items,
    addToCart, // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÉ‡∏ô View
    removeOneFromCart, // ‚úÖ ‡∏•‡∏ö‡∏ó‡∏µ‡∏•‡∏∞ 1
    removeAllFromCart, // ‚úÖ ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏Å‡πâ‡∏≠‡∏ô
    resetCart, // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    cartItems, // ‚úÖ payload ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö API
    countItems, // ‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ß‡∏°
    sumTotalPoint, // ‚úÖ ‡πÅ‡∏ï‡πâ‡∏°‡∏£‡∏ß‡∏°
  };
});
